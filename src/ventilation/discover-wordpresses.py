#!/usr/bin/env python3
# -*- coding: utf-8; -*-
# All rights reserved. ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE, Switzerland, VPSI, 2017

"""discover-wordpresses: Find where source Wordpresses reside from a CSV file.

The CSV file must have a 'source' column with URLs in it.  Other columns are
ignored.

Usage:
  discover-wordpresses.py <ventilation_csv_file> <target>

"""

from docopt import docopt
from memoize import mproperty
from urllib.parse import urlparse

import os, sys
dirname = os.path.dirname
sys.path.append(dirname(dirname(os.path.realpath(__file__))))

from utils import Utils
from ops import SshRemoteHost


class AnsibleGroup:
    def __init__(self, common_vars):
        self.common_vars = common_vars
        self.hosts = {}

    def has_wordpress(self, designated_name):
        return designated_name in self.hosts

    def add_wordpress(self, designated_name, host_specific_vars={}):
        if self.has_wordpress(designated_name):
            raise Exception('Duplicate designated name %s' % designated_name)
        self.hosts[designated_name] = host_specific_vars

    def save(self, target):
        group_name = os.path.basename(target)
        with open(target, 'w') as f:
            f.write("# Automatically generated by discover-wordpresses.py\n\n")
            f.write("[all-wordpresses:children]\n%s\n\n" % group_name)

            f.write("[%s]\n" % group_name)
            for host, vars in self.hosts.items():
                vars_txt = ' '.join(
                    '%s=%s' % (k, v) for (k, v) in vars.items())
                f.write("%s\t%s\n" % (host, vars_txt))

        group_vars_dir = os.path.join(os.path.dirname(target), 'group_vars')
        os.makedirs(group_vars_dir, exist_ok=True)
        with open(os.path.join(group_vars_dir, group_name), 'w') as f:
            f.write("# Automatically generated by discover-wordpresses.py\n\n")
            for (k, v) in self.common_vars.items():
                f.write('%s: %s\n' % (k, v))

    def __repr__(self):
        return '<%s %s>' % (self.__class__, self.name)

if __name__ == '__main__':
    args = docopt(__doc__)
    # TODO: In test, we have only one group. This may not be the case
    # in prod.
    grp = AnsibleGroup({
        'wp_hostname': 'migration-wp.epfl.ch',
        'wp_env': 'int',
        'ansible_host': SshRemoteHost.test.host,
        'ansible_port': SshRemoteHost.test.port
    })
    for line in Utils.csv_filepath_to_dict(args['<ventilation_csv_file>']):
        source = line['source'].rstrip('*')  # Ignore stars in the ventilation CSV
        # TODO: Make all that follows work for prod as well.
        wp_path = SshRemoteHost.test.find_wordpress_path(source)
        site_dirname = os.path.basename(wp_path)
        if not grp.has_wordpress(site_dirname):
            grp.add_wordpress(site_dirname, {'wp_path': site_dirname})
    grp.save(args['<target>'])
